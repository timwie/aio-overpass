[tool.poetry]
name = "aio-overpass"
version = "0.14.1"
description = "Async client for the Overpass API"
authors = ["Tim Wiechers <mail@timwie.dev>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/timwie/aio-overpass"
documentation = "https://www.timwie.dev/aio-overpass/"
packages = [{ include = "aio_overpass" }]
include = ["RELEASES.md"]
keywords = [
    "geojson",
    "geospatial",
    "gis",
    "openstreetmap",
    "osm",
    "overpass-api",
    "public-transport",
    "spatial-analysis",
    "spatial-data",
    "shapely",
]
classifiers = [
    # TODO "Development Status :: 4 - Beta"
    #   - complete test suites
    #   - usability testing
    #   - check for performance issues

    # TODO "Development Status :: 5 - Production/Stable"
    #   - release 1.0
    #   - field-tested
    #   - no major bugs

    "Development Status :: 3 - Alpha",
    "Framework :: aiohttp",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP",
    "Typing :: Typed",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.urls]
"Release Notes" = "https://github.com/timwie/aio-overpass/blob/main/RELEASES.md"
"Test Coverage" = "https://codecov.io/gh/timwie/aio-overpass"

[tool.poetry.dependencies]
aiohttp = { version = "^3.9", extras = ["speedups"] }
joblib = { version = "^1.3", optional = true }
networkx = { version = "^3", optional = true }
numpy = [
    { version = ">=1.23,<3", optional = true, python = ">=3.10,<3.12" },
    { version = ">=1.26,<3", optional = true, python = ">=3.12,<3.13" },
]
python = "^3.10"
shapely = { version = "^2", optional = true }

[tool.poetry.extras]
joblib = ["joblib"]
networkx = ["networkx"]
shapely = ["numpy", "shapely"]

[tool.poetry.group.dev.dependencies]
aioresponses = "^0.7.6"
codecov = "^2.1.13"
geojson = "^3.1.0"
invoke = "^2.2.0"
isort = "^5.13.2"
mypy = "^1.11.1"
pdoc = "^14.6.0"
pytest = "^8.3.2"
pytest-asyncio = "^0.23.5"
pytest-cov = "^5.0.0"
pytest-xdist = "^3.6.1"
ruff = "^0.5.0"
slotscheck = "^0.19.0"

[tool.poetry.group.notebooks]
optional = true

[tool.poetry.group.notebooks.dependencies]
folium = "^0.17.0"
jupyterlab = "^4.2.4"
papermill = "^2.6.0"
randomcolor = "^0.4.4.6"
selenium = "^4.23.1"
tabulate = "^0.9.0"

[tool.ruff]
# https://docs.astral.sh/ruff/settings/
# https://docs.astral.sh/ruff/rules/
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812", "D105", "D107", "D203", "D212", "FIX", "G004", "I", "ISC001", "PLR2004", "S101", "SLF001", "TD",
]

[tool.ruff.lint.per-file-ignores]
"test/*" = ["ANN", "ASYNC230", "C901", "D", "E501", "F401", "F811", "PLR0915"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["__doc__"]

[tool.isort]
# https://pycqa.github.io/isort/docs/configuration/options.html
profile = "black"
line_length = 100
indent = '    '
multi_line_output = 6
lines_after_imports = 2
known_first_party = "aio_overpass,test"
sections = "STDLIB,FIRSTPARTY,THIRDPARTY,LOCALFOLDER"

[tool.mypy]
# https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-library-stubs-or-py-typed-marker
ignore_missing_imports = true

[tool.coverage.run]
branch = true

[tool.coverage.report]
exclude_also = [
    "raise NotImplementedError",
]

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"
