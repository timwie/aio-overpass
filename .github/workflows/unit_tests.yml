name: Unit tests

on:
  workflow_dispatch:
  pull_request:
  push:
    paths:
      - '.github/workflows/unit_tests.yml'

      # source files
      - 'aio_overpass/**.py'
      - 'test/**.py'

      # test data
      - 'test/**.json'
      - 'test/**.json.gz'

      # we use commands from here
      - 'tasks.py'

      # there are tests involving the readme
      - 'aio_overpass/doc/**.md'
      - 'README.md'

      # dependency changes
      - 'pyproject.toml'
      - 'uv.lock'

jobs:
  test:
    name: Test package
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13", "3.14", "3.14t"]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          python-version: ${{ matrix.python-version }}

      - name: Set PYTHON_GIL
        if: endsWith(matrix.python-version, 't')
        run: |
          echo "PYTHON_GIL=0" >> "$GITHUB_ENV"

      - name: Install dependencies & library
        run: uv sync --all-extras --dev

      - name: Test with pytest
        run: uv run invoke test

      - name: Generate docs with pdoc
        run: uv run pdoc -o ./doc aio_overpass/

  coverage:
    name: Upload test coverage to Codecov
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v5

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"
          python-version: "3.12"

      - name: Install dependencies & library
        run: uv sync --all-extras --dev

      - name: Test with pytest
        run: uv run invoke test-cov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
