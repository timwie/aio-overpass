name: Test and lint package

on:
  workflow_dispatch:
  pull_request:
  push:
    paths:
      - '.github/workflows/push_test.yml'
      - 'aio_overpass/**.py'
      - 'examples/**.ipynb'
      - 'test/**.py'
      - 'test/**.json'
      - 'test/**.json.gz'
      - 'pyproject.toml'
      - 'tasks.py'
      - 'aio_overpass/doc/**.md'
      - 'README.md'
      - 'uv.lock'

jobs:
  test:
    name: Test package
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies & library
        run: uv sync --all-extras --dev

      - name: Test with pytest
        run: uv run invoke test

      - name: Generate docs with pdoc
        run: uv run pdoc -o ./doc aio_overpass/

  coverage:
    name: Upload test coverage to Codecov (3.11)
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies & library
        run: uv sync --all-extras --dev

      - name: Test with pytest
        run: uv run invoke test-cov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  lint:
    name: Lint package (3.11)
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Check if pyproject.toml consistent with uv.lock
        run: uv lock --check

      - name: Install dependencies & library
        run: uv sync --all-extras --dev

      - name: Check formatting with Ruff
        run: uv run ruff format aio_overpass/ --check

      - name: Lint with Ruff
        if: always()  # keep going even if previous step failed
        run: uv run ruff check aio_overpass/

      - name: Lint tests with Ruff
        if: always()  # keep going even if previous step failed
        run: uv run ruff check test/

      - name: Check types with mypy
        if: always()  # keep going even if previous step failed
        run: uv run mypy aio_overpass/

      - name: Validate __slots__
        if: always()  # keep going even if previous step failed
        run: uv run slotscheck -m aio_overpass --require-subclass -v
